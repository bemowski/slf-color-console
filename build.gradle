/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'  // required for sonatype
apply plugin: 'io.codearte.nexus-staging'

group = 'net.jmatrix'
version = '1.0.2'


// In this section you declare where to find the dependencies of your project
repositories {
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.22'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}


//gradle.buildFinished{
//   copyRuntimeLibs()
//}

task copyRuntimeLibs(type: Copy) {
   into "build/libs/runtime"
   from configurations.runtime
}

task copyCLI(type: Copy) {
   into "build/cli"
   from "cli"
}

build.finalizedBy(copyRuntimeLibs, copyCLI)

// Maven publish to sonatype (for maven central)
// AN OLDER POST, SOME INFO: http://jedicoder.blogspot.com/2011/11/automated-gradle-project-deployment-to.html
// http://central.sonatype.org/pages/gradle.html
//   gradle publishToMavenLocal
publishing {
    publications {
        maven(MavenPublication) {
            groupId 'net.jmatrix'
            artifactId 'slf-color-console'
            version version

            from components.java
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}
 
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}
signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
 
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
 
            pom.project {
               name 'slf-color-console'
               packaging 'jar'
               description 'slf-color-console is a binding and implementation to log to System.err, System.out. with ansi color.'
               url 'http://gradlefx.github.com/'
 
               scm {
                   url 'scm:git@github.com:bemowski/slf-color-console.git'
                   connection 'scm:git@github.com:bemowski/slf-color-console.git'
                   developerConnection 'scm:git@github.com:bemowski/slf-color-console.git'
               }
 
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'bemowski'
                       name 'Paul Bemowski'
                   }
               }
           }
        }
    }
}

// After publish with 
//   gradle uploadArchieves
// promote with:
//   gradle closeAndPromoteRepository
nexusStaging {
    packageGroup = group //optional if packageGroup == project.getGroup()
//    stagingProfileId = "yourStagingProfileId" //when not defined will be got from server using "packageGroup"
}